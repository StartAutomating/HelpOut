<?xml version="1.0" encoding="utf-8"?>
<helpItems schema="maml">
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-MAML</command:name>
      <command:noun>MAML</command:noun>
      <command:verb>Get</command:verb>
      <maml:description>
        <maml:para>Gets MAML help</maml:para>
      </maml:description>
      <dev:version>0.5.5</dev:version>
    </command:details>
    <maml:description>
      <maml:para>Gets help for a given command, as MAML (Microsoft Assistance Markup Language) xml.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-MAML</maml:name>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>Compact</maml:name>
          <maml:description>
            <maml:para>If set, the generated MAML will be compact (no extra whitespace or indentation).  If not set, the MAML will be indented.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>XML</maml:name>
          <maml:description>
            <maml:para>If set, will return the MAML as an XmlDocument.  The default is to return the MAML as a string.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>NoVersion</maml:name>
          <maml:description>
            <maml:para>If set, the generate MAML will not contain a version number.  
This slightly reduces the size of the MAML file, and reduces the rate of changes in the MAML file.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>SkipCommandType</maml:name>
          <maml:description>
            <maml:para>A list of command types to skip.
If not provided, all types of commands from the module will be saved as a markdown document.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.CommandTypes[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.CommandTypes[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>IncludeAlias</maml:name>
          <maml:description>
            <maml:para>If set, will include aliases in the MAML output.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-MAML</maml:name>
        <command:parameter required="false" position="0" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The name of or more commands.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>Compact</maml:name>
          <maml:description>
            <maml:para>If set, the generated MAML will be compact (no extra whitespace or indentation).  If not set, the MAML will be indented.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>XML</maml:name>
          <maml:description>
            <maml:para>If set, will return the MAML as an XmlDocument.  The default is to return the MAML as a string.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>NoVersion</maml:name>
          <maml:description>
            <maml:para>If set, the generate MAML will not contain a version number.  
This slightly reduces the size of the MAML file, and reduces the rate of changes in the MAML file.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>SkipCommandType</maml:name>
          <maml:description>
            <maml:para>A list of command types to skip.
If not provided, all types of commands from the module will be saved as a markdown document.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.CommandTypes[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.CommandTypes[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>IncludeAlias</maml:name>
          <maml:description>
            <maml:para>If set, will include aliases in the MAML output.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-MAML</maml:name>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>Module</maml:name>
          <maml:description>
            <maml:para>The name of one or more modules.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>Compact</maml:name>
          <maml:description>
            <maml:para>If set, the generated MAML will be compact (no extra whitespace or indentation).  If not set, the MAML will be indented.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>XML</maml:name>
          <maml:description>
            <maml:para>If set, will return the MAML as an XmlDocument.  The default is to return the MAML as a string.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>NoVersion</maml:name>
          <maml:description>
            <maml:para>If set, the generate MAML will not contain a version number.  
This slightly reduces the size of the MAML file, and reduces the rate of changes in the MAML file.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>SkipCommandType</maml:name>
          <maml:description>
            <maml:para>A list of command types to skip.
If not provided, all types of commands from the module will be saved as a markdown document.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.CommandTypes[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.CommandTypes[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>IncludeAlias</maml:name>
          <maml:description>
            <maml:para>If set, will include aliases in the MAML output.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-MAML</maml:name>
        <command:parameter required="true" position="named" pipelineInput="True (ByValue)" aliases="" variableLength="true" globbing="false">
          <maml:name>CommandInfo</maml:name>
          <maml:description>
            <maml:para>The CommandInfo object (returned from Get-Command).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Management.Automation.CommandInfo[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.CommandInfo[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>Compact</maml:name>
          <maml:description>
            <maml:para>If set, the generated MAML will be compact (no extra whitespace or indentation).  If not set, the MAML will be indented.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>XML</maml:name>
          <maml:description>
            <maml:para>If set, will return the MAML as an XmlDocument.  The default is to return the MAML as a string.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>NoVersion</maml:name>
          <maml:description>
            <maml:para>If set, the generate MAML will not contain a version number.  
This slightly reduces the size of the MAML file, and reduces the rate of changes in the MAML file.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>SkipCommandType</maml:name>
          <maml:description>
            <maml:para>A list of command types to skip.
If not provided, all types of commands from the module will be saved as a markdown document.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.CommandTypes[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.CommandTypes[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>IncludeAlias</maml:name>
          <maml:description>
            <maml:para>If set, will include aliases in the MAML output.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>CommandInfo</maml:name>
        <maml:description>
          <maml:para>The CommandInfo object (returned from Get-Command).</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.CommandInfo[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.CommandInfo[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>Compact</maml:name>
        <maml:description>
          <maml:para>If set, the generated MAML will be compact (no extra whitespace or indentation).  If not set, the MAML will be indented.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
        <dev:type>
          <maml:name>Switch</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>IncludeAlias</maml:name>
        <maml:description>
          <maml:para>If set, will include aliases in the MAML output.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
        <dev:type>
          <maml:name>Switch</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>Module</maml:name>
        <maml:description>
          <maml:para>The name of one or more modules.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The name of or more commands.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>NoVersion</maml:name>
        <maml:description>
          <maml:para>If set, the generate MAML will not contain a version number.  
This slightly reduces the size of the MAML file, and reduces the rate of changes in the MAML file.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
        <dev:type>
          <maml:name>Switch</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>SkipCommandType</maml:name>
        <maml:description>
          <maml:para>A list of command types to skip.
If not provided, all types of commands from the module will be saved as a markdown document.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.CommandTypes[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.CommandTypes[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>XML</maml:name>
        <maml:description>
          <maml:para>If set, will return the MAML as an XmlDocument.  The default is to return the MAML as a string.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
        <dev:type>
          <maml:name>Switch</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>[Management.Automation.CommandInfo]</maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description>
          <maml:para>Accepts a command</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[String]</maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description>
          <maml:para>The MAML, as a String.  This is the default.</maml:para>
        </maml:description>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>[Xml]</maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description>
          <maml:para>The MAML, as an XmlDocument (when -XML is passed in)</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title> -------------------------- EXAMPLE 1 -------------------------- </maml:title>
        <maml:introduction>
          <maml:para> PS &gt;  </maml:para>
        </maml:introduction>
        <dev:code> Get-MAML -Name Get-MAML </dev:code>
        <dev:remarks>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title> -------------------------- EXAMPLE 2 -------------------------- </maml:title>
        <maml:introduction>
          <maml:para> PS &gt;  </maml:para>
        </maml:introduction>
        <dev:code> Get-Command Get-MAML | Get-MAML </dev:code>
        <dev:remarks>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title> -------------------------- EXAMPLE 3 -------------------------- </maml:title>
        <maml:introduction>
          <maml:para> PS &gt;  </maml:para>
        </maml:introduction>
        <dev:code> Get-MAML -Name Get-MAML -Compact </dev:code>
        <dev:remarks>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title> -------------------------- EXAMPLE 4 -------------------------- </maml:title>
        <maml:introduction>
          <maml:para> PS &gt;  </maml:para>
        </maml:introduction>
        <dev:code> Get-MAML -Name Get-MAML -XML </dev:code>
        <dev:remarks>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Get-Help</maml:linkText>
        <maml:uri>
        </maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Save-MAML</maml:linkText>
        <maml:uri>
        </maml:uri>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-MarkdownHelp</command:name>
      <command:noun>MarkdownHelp</command:noun>
      <command:verb>Get</command:verb>
      <maml:description>
        <maml:para>Gets Markdown Help</maml:para>
      </maml:description>
      <dev:version>0.5.5</dev:version>
    </command:details>
    <maml:description>
      <maml:para>Gets Help for a given command, in Markdown</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-MarkdownHelp</maml:name>
        <command:parameter required="false" position="0" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The name of the specified command or concept.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
          <maml:name>Wiki</maml:name>
          <maml:description>
            <maml:para>If set, will generate a markdown wiki.  Links will be relative to the current path, and will not include the .md extensions</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
          <maml:name>GitHubDocRoot</maml:name>
          <maml:description>
            <maml:para>If set, will interlink documentation as if it were for GitHub pages, beneath a given directory</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>Rename</maml:name>
          <maml:description>
            <maml:para>If provided, will rename the help topic before getting markdown.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>SectionOrder</maml:name>
          <maml:description>
            <maml:para>The order of the sections.
If not provided, this will be the order they are defined in the formatter.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>NoValidValueEnumeration</maml:name>
          <maml:description>
            <maml:para>If set, will not enumerate valid values and enums of parameters.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>IncludeYamlHeader</maml:name>
          <maml:description>
            <maml:para>If set, will not attach a YAML header to the generated help.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
          <maml:name>YamlHeaderInformationType</maml:name>
          <maml:description>
            <maml:para>The type of information to include in the YAML Header</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
          <maml:name>FormatAttribute</maml:name>
          <maml:description>
            <maml:para>The formatting used for unknown attributes.
Any key or property in this object will be treated as a potential typename
Any value will be the desired formatting.
If the value is a [ScriptBlock], the [ScriptBlock] will be run.
If the value is a [string], it will be expanded
In either context, `$_` will be the current attribute.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Psobject</command:parameterValue>
          <dev:type>
            <maml:name>Psobject</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>FormatAttribute</maml:name>
        <maml:description>
          <maml:para>The formatting used for unknown attributes.
Any key or property in this object will be treated as a potential typename
Any value will be the desired formatting.
If the value is a [ScriptBlock], the [ScriptBlock] will be run.
If the value is a [string], it will be expanded
In either context, `$_` will be the current attribute.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Psobject</command:parameterValue>
        <dev:type>
          <maml:name>Psobject</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>GitHubDocRoot</maml:name>
        <maml:description>
          <maml:para>If set, will interlink documentation as if it were for GitHub pages, beneath a given directory</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>IncludeYamlHeader</maml:name>
        <maml:description>
          <maml:para>If set, will not attach a YAML header to the generated help.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
        <dev:type>
          <maml:name>Switch</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The name of the specified command or concept.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>NoValidValueEnumeration</maml:name>
        <maml:description>
          <maml:para>If set, will not enumerate valid values and enums of parameters.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
        <dev:type>
          <maml:name>Switch</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>Rename</maml:name>
        <maml:description>
          <maml:para>If provided, will rename the help topic before getting markdown.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>SectionOrder</maml:name>
        <maml:description>
          <maml:para>The order of the sections.
If not provided, this will be the order they are defined in the formatter.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>Wiki</maml:name>
        <maml:description>
          <maml:para>If set, will generate a markdown wiki.  Links will be relative to the current path, and will not include the .md extensions</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
        <dev:type>
          <maml:name>Switch</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>YamlHeaderInformationType</maml:name>
        <maml:description>
          <maml:para>The type of information to include in the YAML Header</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[string]</maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description>
          <maml:para>The documentation for a single command, in Markdown.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title> -------------------------- EXAMPLE 1 -------------------------- </maml:title>
        <maml:introduction>
          <maml:para> PS &gt;  </maml:para>
        </maml:introduction>
        <dev:code> ##### Getting Markdown Help        
Get-MarkdownHelp Get-Help # Get-MarkdownHelp is a wrapper for Get-Help </dev:code>
        <dev:remarks>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Save-MarkdownHelp</maml:linkText>
        <maml:uri>
        </maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-Help</maml:linkText>
        <maml:uri>
        </maml:uri>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-ScriptReference</command:name>
      <command:noun>ScriptReference</command:noun>
      <command:verb>Get</command:verb>
      <maml:description>
        <maml:para>Gets a script's references</maml:para>
      </maml:description>
      <dev:version>0.5.5</dev:version>
    </command:details>
    <maml:description>
      <maml:para>Gets the external references of a given PowerShell command.  These are the commands the script calls, and the types the script uses.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-ScriptReference</maml:name>
        <command:parameter required="true" position="0" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>FilePath</maml:name>
          <maml:description>
            <maml:para>The path to a file</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
          <maml:name>Recurse</maml:name>
          <maml:description>
            <maml:para>If set, will recursively find references.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-ScriptReference</maml:name>
        <command:parameter required="true" position="0" pipelineInput="True (ByValue)" aliases="" variableLength="true" globbing="false">
          <maml:name>ScriptBlock</maml:name>
          <maml:description>
            <maml:para>One or more PowerShell ScriptBlocks</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.Management.Automation.ScriptBlock[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.ScriptBlock[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
          <maml:name>Recurse</maml:name>
          <maml:description>
            <maml:para>If set, will recursively find references.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>FilePath</maml:name>
        <maml:description>
          <maml:para>The path to a file</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>Recurse</maml:name>
        <maml:description>
          <maml:para>If set, will recursively find references.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
        <dev:type>
          <maml:name>Switch</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>ScriptBlock</maml:name>
        <maml:description>
          <maml:para>One or more PowerShell ScriptBlocks</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.ScriptBlock[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.ScriptBlock[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:examples>
      <command:example>
        <maml:title> -------------------------- EXAMPLE 1 -------------------------- </maml:title>
        <maml:introduction>
          <maml:para> PS &gt;  </maml:para>
        </maml:introduction>
        <dev:code> Get-Command Get-ScriptReference | Get-ScriptReference </dev:code>
        <dev:remarks>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-ScriptStory</command:name>
      <command:noun>ScriptStory</command:noun>
      <command:verb>Get</command:verb>
      <maml:description>
        <maml:para>Gets a Script's story</maml:para>
      </maml:description>
      <dev:version>0.5.5</dev:version>
    </command:details>
    <maml:description>
      <maml:para>Gets the Script's "Story"</maml:para>
      <maml:para>Script Stories are a simple markdown summary of all single-line comments within a script (aside from those in the param block).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-ScriptStory</maml:name>
        <command:parameter required="true" position="0" pipelineInput="True (ByValue)" aliases="" variableLength="true" globbing="false">
          <maml:name>ScriptBlock</maml:name>
          <maml:description>
            <maml:para>A script block</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">Scriptblock</command:parameterValue>
          <dev:type>
            <maml:name>Scriptblock</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
          <maml:name>RegionName</maml:name>
          <maml:description>
            <maml:para>The friendly names of code regions or begin,process, or end blocks.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Collections.IDictionary</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.IDictionary</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
          <maml:name>HeadingSize</maml:name>
          <maml:description>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Int</command:parameterValue>
          <dev:type>
            <maml:name>Int</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-ScriptStory</maml:name>
        <command:parameter required="true" position="0" pipelineInput="True (ByValue)" aliases="" variableLength="true" globbing="false">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>A block of text</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
          <maml:name>RegionName</maml:name>
          <maml:description>
            <maml:para>The friendly names of code regions or begin,process, or end blocks.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Collections.IDictionary</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.IDictionary</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
          <maml:name>HeadingSize</maml:name>
          <maml:description>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Int</command:parameterValue>
          <dev:type>
            <maml:name>Int</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>HeadingSize</maml:name>
        <maml:description>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Int</command:parameterValue>
        <dev:type>
          <maml:name>Int</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>RegionName</maml:name>
        <maml:description>
          <maml:para>The friendly names of code regions or begin,process, or end blocks.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Collections.IDictionary</command:parameterValue>
        <dev:type>
          <maml:name>System.Collections.IDictionary</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>ScriptBlock</maml:name>
        <maml:description>
          <maml:para>A script block</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Scriptblock</command:parameterValue>
        <dev:type>
          <maml:name>Scriptblock</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>A block of text</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:examples>
      <command:example>
        <maml:title> -------------------------- EXAMPLE 1 -------------------------- </maml:title>
        <maml:introduction>
          <maml:para> PS &gt;  </maml:para>
        </maml:introduction>
        <dev:code> Get-Command Get-ScriptStory | Get-ScriptStory </dev:code>
        <dev:remarks>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Install-MAML</command:name>
      <command:noun>MAML</command:noun>
      <command:verb>Install</command:verb>
      <maml:description>
        <maml:para>Installs MAML into a module</maml:para>
      </maml:description>
      <dev:version>0.5.5</dev:version>
    </command:details>
    <maml:description>
      <maml:para>Installs MAML into a module.  </maml:para>
      <maml:para>This generates a single script that: </maml:para>
      <maml:para>* Includes all commands</maml:para>
      <maml:para>* Removes their multiline comments</maml:para>
      <maml:para>* Directs the commands to use external help</maml:para>
      <maml:para>You should then include this script in your module import.</maml:para>
      <maml:para>Ideally, you should use the allcommands script</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Install-MAML</maml:name>
        <command:parameter required="true" position="0" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>Module</maml:name>
          <maml:description>
            <maml:para>The name of one or more modules.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>NoRefresh</maml:name>
          <maml:description>
            <maml:para>If set, will refresh the documentation for the module before generating the commands file.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>Compact</maml:name>
          <maml:description>
            <maml:para>If set, will compact the generated MAML.  This will be ignored if -Refresh is not passed, since no new MAML will be generated.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="1" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>ScriptName</maml:name>
          <maml:description>
            <maml:para>The name of the combined script.  By default, allcommands.ps1.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>FunctionRoot</maml:name>
          <maml:description>
            <maml:para>The root directories containing functions.  If not provided, the function root will be the module root.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>NoRecurse</maml:name>
          <maml:description>
            <maml:para>If set, the function roots will not be recursively searched.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="2" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>Encoding</maml:name>
          <maml:description>
            <maml:para>The encoding of the combined script.  By default, UTF8.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Text.Encoding</command:parameterValue>
          <dev:type>
            <maml:name>System.Text.Encoding</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>Exclude</maml:name>
          <maml:description>
            <maml:para>A list of wildcards to exclude.  This list will always contain the ScriptName.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>NoVersion</maml:name>
          <maml:description>
            <maml:para>If set, the generated MAML will not contain a version number.  
This slightly reduces the size of the MAML file, and reduces the rate of changes in the MAML file.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>Culture</maml:name>
          <maml:description>
            <maml:para>If provided, will save the MAML to a different directory than the current UI culture.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Cultureinfo</command:parameterValue>
          <dev:type>
            <maml:name>Cultureinfo</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>NoComment</maml:name>
          <maml:description>
            <maml:para>If set, will remove comments within functions when generating allcommands.ps1</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>If set, will return the files that were generated.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>Minify</maml:name>
          <maml:description>
            <maml:para>If set, will minify the code in allcommands.ps1.
By default, this will stream down the latest version of [PSMinifier](https://github.com/StartAutomating/PSMinifier).</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>MinifierSource</maml:name>
          <maml:description>
            <maml:para>If -MinifierSource is like `*Gallery*`, it will use the PowerShell Gallery to download.
If -MinifierSource is an alternate URL, it will download the contents of that URL (it must define a function named Compress-ScriptBlock).</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>Compact</maml:name>
        <maml:description>
          <maml:para>If set, will compact the generated MAML.  This will be ignored if -Refresh is not passed, since no new MAML will be generated.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
        <dev:type>
          <maml:name>Switch</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>Culture</maml:name>
        <maml:description>
          <maml:para>If provided, will save the MAML to a different directory than the current UI culture.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Cultureinfo</command:parameterValue>
        <dev:type>
          <maml:name>Cultureinfo</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>Encoding</maml:name>
        <maml:description>
          <maml:para>The encoding of the combined script.  By default, UTF8.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Text.Encoding</command:parameterValue>
        <dev:type>
          <maml:name>System.Text.Encoding</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>Exclude</maml:name>
        <maml:description>
          <maml:para>A list of wildcards to exclude.  This list will always contain the ScriptName.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>FunctionRoot</maml:name>
        <maml:description>
          <maml:para>The root directories containing functions.  If not provided, the function root will be the module root.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>MinifierSource</maml:name>
        <maml:description>
          <maml:para>If -MinifierSource is like `*Gallery*`, it will use the PowerShell Gallery to download.
If -MinifierSource is an alternate URL, it will download the contents of that URL (it must define a function named Compress-ScriptBlock).</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>Minify</maml:name>
        <maml:description>
          <maml:para>If set, will minify the code in allcommands.ps1.
By default, this will stream down the latest version of [PSMinifier](https://github.com/StartAutomating/PSMinifier).</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
        <dev:type>
          <maml:name>Switch</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>Module</maml:name>
        <maml:description>
          <maml:para>The name of one or more modules.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>NoComment</maml:name>
        <maml:description>
          <maml:para>If set, will remove comments within functions when generating allcommands.ps1</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
        <dev:type>
          <maml:name>Switch</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>NoRecurse</maml:name>
        <maml:description>
          <maml:para>If set, the function roots will not be recursively searched.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
        <dev:type>
          <maml:name>Switch</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>NoRefresh</maml:name>
        <maml:description>
          <maml:para>If set, will refresh the documentation for the module before generating the commands file.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
        <dev:type>
          <maml:name>Switch</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>NoVersion</maml:name>
        <maml:description>
          <maml:para>If set, the generated MAML will not contain a version number.  
This slightly reduces the size of the MAML file, and reduces the rate of changes in the MAML file.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
        <dev:type>
          <maml:name>Switch</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>PassThru</maml:name>
        <maml:description>
          <maml:para>If set, will return the files that were generated.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
        <dev:type>
          <maml:name>Switch</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>ScriptName</maml:name>
        <maml:description>
          <maml:para>The name of the combined script.  By default, allcommands.ps1.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>System.Nullable</maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>System.IO.FileInfo</maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title> -------------------------- EXAMPLE 1 -------------------------- </maml:title>
        <maml:introduction>
          <maml:para> PS &gt;  </maml:para>
        </maml:introduction>
        <dev:code> Install-MAML -Module HelpOut </dev:code>
        <dev:remarks>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Save-MAML</maml:linkText>
        <maml:uri>
        </maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>ConvertTo-MAML</maml:linkText>
        <maml:uri>
        </maml:uri>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Measure-Help</command:name>
      <command:noun>Help</command:noun>
      <command:verb>Measure</command:verb>
      <maml:description>
        <maml:para>Determines the percentage of documentation</maml:para>
      </maml:description>
      <dev:version>0.5.5</dev:version>
    </command:details>
    <maml:description>
      <maml:para>Determines the percentage of documentation in a given script</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Measure-Help</maml:name>
        <command:parameter required="true" position="0" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>FilePath</maml:name>
          <maml:description>
            <maml:para>The path to the file</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Measure-Help</maml:name>
        <command:parameter required="true" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>ScriptBlock</maml:name>
          <maml:description>
            <maml:para>A PowerShell script block</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">Scriptblock</command:parameterValue>
          <dev:type>
            <maml:name>Scriptblock</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The name of the script being measured.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>FilePath</maml:name>
        <maml:description>
          <maml:para>The path to the file</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The name of the script being measured.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>ScriptBlock</maml:name>
        <maml:description>
          <maml:para>A PowerShell script block</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Scriptblock</command:parameterValue>
        <dev:type>
          <maml:name>Scriptblock</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:examples>
      <command:example>
        <maml:title> -------------------------- EXAMPLE 1 -------------------------- </maml:title>
        <maml:introduction>
          <maml:para> PS &gt;  </maml:para>
        </maml:introduction>
        <dev:code> dir -Filter *.ps1 | Measure-Help </dev:code>
        <dev:remarks>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title> -------------------------- EXAMPLE 2 -------------------------- </maml:title>
        <maml:introduction>
          <maml:para> PS &gt;  </maml:para>
        </maml:introduction>
        <dev:code> Get-Command -Module HelpOut | Measure-Help </dev:code>
        <dev:remarks>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title> -------------------------- EXAMPLE 3 -------------------------- </maml:title>
        <maml:introduction>
          <maml:para> PS &gt;  </maml:para>
        </maml:introduction>
        <dev:code> Measure-Help {
    # This script has some documentation, and then a bunch of code that literally does nothing
    $null = $null # The null equivilancy 
    $null * 500 # x times nothing is still nothing
    $null / 100 # Nothing out of 100             
} | Select-Object -ExpandProperty PercentageDocumented </dev:code>
        <dev:remarks>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Get-Help</maml:linkText>
        <maml:uri>
        </maml:uri>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Save-MAML</command:name>
      <command:noun>MAML</command:noun>
      <command:verb>Save</command:verb>
      <maml:description>
        <maml:para>Saves a Module's MAML</maml:para>
      </maml:description>
      <dev:version>0.5.5</dev:version>
    </command:details>
    <maml:description>
      <maml:para>Generates a Module's MAML file, and then saves it to the appropriate location.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Save-MAML</maml:name>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>Compact</maml:name>
          <maml:description>
            <maml:para>If set, the generated MAML will be compact (no extra whitespace or indentation).  If not set, the MAML will be indented.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>Culture</maml:name>
          <maml:description>
            <maml:para>If provided, will save the MAML to a different directory than the current UI culture.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Cultureinfo</command:parameterValue>
          <dev:type>
            <maml:name>Cultureinfo</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
          <maml:name>NoVersion</maml:name>
          <maml:description>
            <maml:para>If set, the generated MAML will not contain a version number.  
This slightly reduces the size of the MAML file, and reduces the rate of changes in the MAML file.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>SkipCommandType</maml:name>
          <maml:description>
            <maml:para>A list of command types to skip.
If not provided, all types of commands from the module will be saved as a markdown document.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.CommandTypes[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.CommandTypes[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>IncludeAlias</maml:name>
          <maml:description>
            <maml:para>If set, will include aliases in the MAML output.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>If set, will return the files that were generated.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Save-MAML</maml:name>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>Module</maml:name>
          <maml:description>
            <maml:para>The name of one or more modules.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>Compact</maml:name>
          <maml:description>
            <maml:para>If set, the generated MAML will be compact (no extra whitespace or indentation).  If not set, the MAML will be indented.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>Culture</maml:name>
          <maml:description>
            <maml:para>If provided, will save the MAML to a different directory than the current UI culture.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Cultureinfo</command:parameterValue>
          <dev:type>
            <maml:name>Cultureinfo</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
          <maml:name>NoVersion</maml:name>
          <maml:description>
            <maml:para>If set, the generated MAML will not contain a version number.  
This slightly reduces the size of the MAML file, and reduces the rate of changes in the MAML file.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>SkipCommandType</maml:name>
          <maml:description>
            <maml:para>A list of command types to skip.
If not provided, all types of commands from the module will be saved as a markdown document.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.CommandTypes[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.CommandTypes[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>IncludeAlias</maml:name>
          <maml:description>
            <maml:para>If set, will include aliases in the MAML output.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>If set, will return the files that were generated.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>Compact</maml:name>
        <maml:description>
          <maml:para>If set, the generated MAML will be compact (no extra whitespace or indentation).  If not set, the MAML will be indented.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
        <dev:type>
          <maml:name>Switch</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>Culture</maml:name>
        <maml:description>
          <maml:para>If provided, will save the MAML to a different directory than the current UI culture.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Cultureinfo</command:parameterValue>
        <dev:type>
          <maml:name>Cultureinfo</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>IncludeAlias</maml:name>
        <maml:description>
          <maml:para>If set, will include aliases in the MAML output.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
        <dev:type>
          <maml:name>Switch</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>Module</maml:name>
        <maml:description>
          <maml:para>The name of one or more modules.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>NoVersion</maml:name>
        <maml:description>
          <maml:para>If set, the generated MAML will not contain a version number.  
This slightly reduces the size of the MAML file, and reduces the rate of changes in the MAML file.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
        <dev:type>
          <maml:name>Switch</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>PassThru</maml:name>
        <maml:description>
          <maml:para>If set, will return the files that were generated.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
        <dev:type>
          <maml:name>Switch</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>SkipCommandType</maml:name>
        <maml:description>
          <maml:para>A list of command types to skip.
If not provided, all types of commands from the module will be saved as a markdown document.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.CommandTypes[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.CommandTypes[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>System.Nullable</maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>System.IO.FileInfo</maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title> -------------------------- EXAMPLE 1 -------------------------- </maml:title>
        <maml:introduction>
          <maml:para> PS &gt;  </maml:para>
        </maml:introduction>
        <dev:code> Save-Maml -Module HelpOut </dev:code>
        <dev:remarks>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title> -------------------------- EXAMPLE 2 -------------------------- </maml:title>
        <maml:introduction>
          <maml:para> PS &gt;  </maml:para>
        </maml:introduction>
        <dev:code> Save-Maml -Module HelpOut -WhatIf </dev:code>
        <dev:remarks>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title> -------------------------- EXAMPLE 3 -------------------------- </maml:title>
        <maml:introduction>
          <maml:para> PS &gt;  </maml:para>
        </maml:introduction>
        <dev:code> Save-Maml -Module HelpOut -PassThru </dev:code>
        <dev:remarks>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Get-MAML</maml:linkText>
        <maml:uri>
        </maml:uri>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Save-MarkdownHelp</command:name>
      <command:noun>MarkdownHelp</command:noun>
      <command:verb>Save</command:verb>
      <maml:description>
        <maml:para>Saves a Module's Markdown Help</maml:para>
      </maml:description>
      <dev:version>0.5.5</dev:version>
    </command:details>
    <maml:description>
      <maml:para>Get markdown help for each command in a module and saves it to the appropriate location.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Save-MarkdownHelp</maml:name>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>Module</maml:name>
          <maml:description>
            <maml:para>The name of one or more modules.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>OutputPath</maml:name>
          <maml:description>
            <maml:para>The output path.
If not provided, will be assumed to be the "docs" folder of a given module (unless -Wiki is specified)</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>Wiki</maml:name>
          <maml:description>
            <maml:para>If set, will interlink documentation as if it were a wiki.  Implied when -OutputPath contains 'wiki'.
If provided without -OutputPath, will assume that a wiki resides in a sibling directory of the module.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>Command</maml:name>
          <maml:description>
            <maml:para>If provided, will generate documentation for additional commands.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.CommandInfo[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.CommandInfo[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>ReplaceCommandName</maml:name>
          <maml:description>
            <maml:para>Replaces parts of the names of the commands provided in the -Command parameter.
-ReplaceScriptName is treated as a regular expression.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>ReplaceCommandNameWith</maml:name>
          <maml:description>
            <maml:para>If provided, will replace parts of the names of the scripts discovered in a -Command parameter with a given Regex replacement.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>ScriptPath</maml:name>
          <maml:description>
            <maml:para>If provided, will generate documentation for any scripts found within these paths.
-ScriptPath can be either a file name or a full path.
If an exact match is not found -ScriptPath will also check to see if there is a wildcard match.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>ReplaceScriptName</maml:name>
          <maml:description>
            <maml:para>If provided, will replace parts of the names of the scripts discovered in a -ScriptDirectory beneath a module.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>ReplaceScriptNameWith</maml:name>
          <maml:description>
            <maml:para>If provided, will replace parts of the names of the scripts discovered in a -ScriptDirectory beneath a module with a given Regex replacement.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>ReplaceLink</maml:name>
          <maml:description>
            <maml:para>If provided, will replace links discovered in markdown content.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>ReplaceLinkWith</maml:name>
          <maml:description>
            <maml:para>If provided, will replace links discovered in markdown content with a given Regex replacement.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>If set, will output changed or created files.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>SectionOrder</maml:name>
          <maml:description>
            <maml:para>The order of the sections.  If not provided, this will be the order they are defined in the formatter.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>IncludeTopic</maml:name>
          <maml:description>
            <maml:para>One or more topic files to include.
Topic files will be treated as markdown and directly copied inline.
By default ```\.help\.txt$``` and ```\.md$```</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>ExcludeTopic</maml:name>
          <maml:description>
            <maml:para>One or more topic file patterns to exclude.
Topic files that match this pattern will not be included.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>ExcludeFile</maml:name>
          <maml:description>
            <maml:para>One or more files to exclude.
By default, this is treated as a wildcard.
If the file name starts and ends with slashes, it will be treated as a Regular Expression.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>IncludeFile</maml:name>
          <maml:description>
            <maml:para>A whitelist of files or directories to include.
If this is provided, only files that match these criteria will be included.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>IncludeExtension</maml:name>
          <maml:description>
            <maml:para>One or more extensions to include.
By default, .css, .gif, .htm, .html, .js, .jpg, .jpeg, .mp4, .png, .svg</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
          <maml:name>ExcludeExtension</maml:name>
          <maml:description>
            <maml:para>One or more extensions to exclude.
By default, not extensions are specifically excluded.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
          <maml:name>IncludeSubmodule</maml:name>
          <maml:description>
            <maml:para>If set, will explicitly include submodule directories.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
          <maml:name>ExcludeSubModule</maml:name>
          <maml:description>
            <maml:para>If set, will explicitly exclude submodule directories.
This is the default.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>NoValidValueEnumeration</maml:name>
          <maml:description>
            <maml:para>If set, will not enumerate valid values and enums of parameters.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>IncludeYamlHeader</maml:name>
          <maml:description>
            <maml:para>If set, will not attach a YAML header to the generated help.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
          <maml:name>YamlHeaderInformationType</maml:name>
          <maml:description>
            <maml:para>The type of information to include in the YAML Header</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="True (ByPropertyName)" aliases="" variableLength="true" globbing="false">
          <maml:name>SkipCommandType</maml:name>
          <maml:description>
            <maml:para>A list of command types to skip.
If not provided, all types of commands from the module will be saved as a markdown document.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">System.Management.Automation.CommandTypes[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.CommandTypes[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
          <maml:name>FormatAttribute</maml:name>
          <maml:description>
            <maml:para>The formatting used for unknown attributes.
Any key or property in this object will be treated as a potential typename
Any value will be the desired formatting.
If the value is a [ScriptBlock], the [ScriptBlock] will be run.
If the value is a [string], it will be expanded
In either context, `$_` will be the current attribute.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Psobject</command:parameterValue>
          <dev:type>
            <maml:name>Psobject</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
          <maml:name>JsonDataPath</maml:name>
          <maml:description>
            <maml:para>The path where json data should be located.
If this is not provided, it will be assumed to be a subdirectory of the -OutputPath.
Specifically, it will be assumed to be: `$OutputPath/_data/Help`</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
          <dev:type>
            <maml:name>String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
          <maml:name>NoJson</maml:name>
          <maml:description>
            <maml:para>If set, will not output json data files.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
          <dev:type>
            <maml:name>Switch</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>
          </dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>Command</maml:name>
        <maml:description>
          <maml:para>If provided, will generate documentation for additional commands.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.CommandInfo[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.CommandInfo[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>ExcludeExtension</maml:name>
        <maml:description>
          <maml:para>One or more extensions to exclude.
By default, not extensions are specifically excluded.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>ExcludeFile</maml:name>
        <maml:description>
          <maml:para>One or more files to exclude.
By default, this is treated as a wildcard.
If the file name starts and ends with slashes, it will be treated as a Regular Expression.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>ExcludeSubModule</maml:name>
        <maml:description>
          <maml:para>If set, will explicitly exclude submodule directories.
This is the default.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
        <dev:type>
          <maml:name>Switch</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>ExcludeTopic</maml:name>
        <maml:description>
          <maml:para>One or more topic file patterns to exclude.
Topic files that match this pattern will not be included.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>FormatAttribute</maml:name>
        <maml:description>
          <maml:para>The formatting used for unknown attributes.
Any key or property in this object will be treated as a potential typename
Any value will be the desired formatting.
If the value is a [ScriptBlock], the [ScriptBlock] will be run.
If the value is a [string], it will be expanded
In either context, `$_` will be the current attribute.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Psobject</command:parameterValue>
        <dev:type>
          <maml:name>Psobject</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>IncludeExtension</maml:name>
        <maml:description>
          <maml:para>One or more extensions to include.
By default, .css, .gif, .htm, .html, .js, .jpg, .jpeg, .mp4, .png, .svg</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>IncludeFile</maml:name>
        <maml:description>
          <maml:para>A whitelist of files or directories to include.
If this is provided, only files that match these criteria will be included.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>IncludeSubmodule</maml:name>
        <maml:description>
          <maml:para>If set, will explicitly include submodule directories.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
        <dev:type>
          <maml:name>Switch</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>IncludeTopic</maml:name>
        <maml:description>
          <maml:para>One or more topic files to include.
Topic files will be treated as markdown and directly copied inline.
By default ```\.help\.txt$``` and ```\.md$```</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>IncludeYamlHeader</maml:name>
        <maml:description>
          <maml:para>If set, will not attach a YAML header to the generated help.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
        <dev:type>
          <maml:name>Switch</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>JsonDataPath</maml:name>
        <maml:description>
          <maml:para>The path where json data should be located.
If this is not provided, it will be assumed to be a subdirectory of the -OutputPath.
Specifically, it will be assumed to be: `$OutputPath/_data/Help`</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>Module</maml:name>
        <maml:description>
          <maml:para>The name of one or more modules.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>NoJson</maml:name>
        <maml:description>
          <maml:para>If set, will not output json data files.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
        <dev:type>
          <maml:name>Switch</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>NoValidValueEnumeration</maml:name>
        <maml:description>
          <maml:para>If set, will not enumerate valid values and enums of parameters.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
        <dev:type>
          <maml:name>Switch</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>OutputPath</maml:name>
        <maml:description>
          <maml:para>The output path.
If not provided, will be assumed to be the "docs" folder of a given module (unless -Wiki is specified)</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>PassThru</maml:name>
        <maml:description>
          <maml:para>If set, will output changed or created files.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
        <dev:type>
          <maml:name>Switch</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>ReplaceCommandName</maml:name>
        <maml:description>
          <maml:para>Replaces parts of the names of the commands provided in the -Command parameter.
-ReplaceScriptName is treated as a regular expression.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>ReplaceCommandNameWith</maml:name>
        <maml:description>
          <maml:para>If provided, will replace parts of the names of the scripts discovered in a -Command parameter with a given Regex replacement.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>ReplaceLink</maml:name>
        <maml:description>
          <maml:para>If provided, will replace links discovered in markdown content.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>ReplaceLinkWith</maml:name>
        <maml:description>
          <maml:para>If provided, will replace links discovered in markdown content with a given Regex replacement.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>ReplaceScriptName</maml:name>
        <maml:description>
          <maml:para>If provided, will replace parts of the names of the scripts discovered in a -ScriptDirectory beneath a module.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>ReplaceScriptNameWith</maml:name>
        <maml:description>
          <maml:para>If provided, will replace parts of the names of the scripts discovered in a -ScriptDirectory beneath a module with a given Regex replacement.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>ScriptPath</maml:name>
        <maml:description>
          <maml:para>If provided, will generate documentation for any scripts found within these paths.
-ScriptPath can be either a file name or a full path.
If an exact match is not found -ScriptPath will also check to see if there is a wildcard match.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>SectionOrder</maml:name>
        <maml:description>
          <maml:para>The order of the sections.  If not provided, this will be the order they are defined in the formatter.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>SkipCommandType</maml:name>
        <maml:description>
          <maml:para>A list of command types to skip.
If not provided, all types of commands from the module will be saved as a markdown document.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.Management.Automation.CommandTypes[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.CommandTypes[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>Wiki</maml:name>
        <maml:description>
          <maml:para>If set, will interlink documentation as if it were a wiki.  Implied when -OutputPath contains 'wiki'.
If provided without -OutputPath, will assume that a wiki resides in a sibling directory of the module.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Switch</command:parameterValue>
        <dev:type>
          <maml:name>Switch</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" position="named" pipelineInput="False" aliases="" variableLength="true" globbing="false">
        <maml:name>YamlHeaderInformationType</maml:name>
        <maml:description>
          <maml:para>The type of information to include in the YAML Header</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:examples>
      <command:example>
        <maml:title> -------------------------- EXAMPLE 1 -------------------------- </maml:title>
        <maml:introduction>
          <maml:para> PS &gt;  </maml:para>
        </maml:introduction>
        <dev:code> Save-MarkdownHelp -Module HelpOut  # Save Markdown to HelpOut/docs </dev:code>
        <dev:remarks>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title> -------------------------- EXAMPLE 2 -------------------------- </maml:title>
        <maml:introduction>
          <maml:para> PS &gt;  </maml:para>
        </maml:introduction>
        <dev:code> Save-MarkdownHelp -Module HelpOut -Wiki # Save Markdown to ../HelpOut.wiki </dev:code>
        <dev:remarks>
        </dev:remarks>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Get-MarkdownHelp</maml:linkText>
        <maml:uri>
        </maml:uri>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
</helpItems>
